name: Deploy (manual)

on:
  workflow_dispatch:
    inputs:
      version_upgrade:
        description: 'Which part of semantic version do you want to increment?'
        required: true
        default: '--patch'
        type: choice
        options:
        - '--patch'
        - '--minor'
        - '--major'
      commit_user_name:
        description: Name used for the commit user
        required: false
        default: github-actions[bot]
      commit_user_email:
        description: Email address used for the commit user
        required: false
        default: github-actions[bot]@users.noreply.github.com

jobs:
  test:
    uses: ./.github/workflows/python-build.yml
    with:
      python-versions: >-
        ["3.x"]

  bump_version:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install bumpver
    - name: Setup author
      run: |
        git config --global user.email ${{ github.event.inputs.commit_user_email }}
        git config --global user.name ${{ github.event.inputs.commit_user_name }}
    - name: Bump version & commit
      run: python -m bumpver update ${{ github.event.inputs.version_upgrade }} --commit --push --tag-commit
    - name: Get bumped commit SHA
      id: sha
      run: |
        sha_new=$(git rev-parse HEAD)
        echo $sha_new
        echo "::set-output name=SHA::$sha_new"
    - run:
          echo ${{ steps.sha.outputs.SHA }}

  deploy:
    needs: bump_version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ needs.bump_version.outputs.new_sha }}
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: python -m build
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
